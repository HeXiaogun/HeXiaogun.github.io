import{_ as i,c as a,o as l,ae as n}from"./chunks/framework.Dh1jimFm.js";const c=JSON.parse('{"title":"","description":"","frontmatter":{"date":"2025-04-23T00:00:00.000Z","tags":["js"]},"headers":[],"relativePath":"main/代码质量/Polyfill 和转译器.md","filePath":"main/代码质量/Polyfill 和转译器.md","lastUpdated":1746186059000}'),t={name:"main/代码质量/Polyfill 和转译器.md"};function e(p,s,h,r,k,o){return l(),a("div",null,s[0]||(s[0]=[n(`<ol><li>转译器（Transpilers） <ol><li>转译器 是一种可以将源码转译成另一种源码的特殊的软件。</li><li><code>height ?? 100</code> 重写为 <code>(height !== undefined &amp;&amp; height !== null) ? height : 100</code>。</li></ol></li><li>垫片（Polyfills） <ol><li>新的语言特性可能不仅包括语法结构和运算符，还可能包括内建函数。</li></ol></li></ol><div class="language-JavaScript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">JavaScript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">	if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Math.trunc) { </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 如果没有这个函数</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">	  // 实现它</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	  Math.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">trunc</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">	    // Math.ceil 和 Math.floor 甚至存在于上古年代的 JavaScript 引擎中</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">	    // 在本教程的后续章节中会讲到它们</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">	    return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> number </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> ?</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Math.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ceil</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(number) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Math.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">floor</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(number);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	  };</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><ol start="3"><li>搭建一个基于 <a href="https://webpack.js.org/" target="_blank" rel="noreferrer">webpack</a> 和 <a href="https://github.com/babel/babel-loader" target="_blank" rel="noreferrer">babel-loader</a> 插件的代码构建系统。 <ol><li><a href="https://compat-table.github.io/compat-table/es6/" target="_blank" rel="noreferrer">https://compat-table.github.io/compat-table/es6/</a> —— 对于原生 JavaScript。</li><li><a href="https://caniuse.com/" target="_blank" rel="noreferrer">https://caniuse.com/</a> —— 对于浏览器相关的函数。</li></ol></li></ol>`,3)]))}const E=i(t,[["render",e]]);export{c as __pageData,E as default};
