import{_ as a,c as i,o as n,ae as e}from"./chunks/framework.Dh1jimFm.js";const u=JSON.parse('{"title":"","description":"","frontmatter":{"date":"2025-04-20T00:00:00.000Z","tags":["js"]},"headers":[],"relativePath":"main/基础知识/现代模式，“use strict”.md","filePath":"main/基础知识/现代模式，“use strict”.md","lastUpdated":1746186059000}'),t={name:"main/基础知识/现代模式，“use strict”.md"};function l(p,s,r,c,o,d){return n(),i("div",null,s[0]||(s[0]=[e(`<p>需要一个特殊的指令 —— <code>&quot;use strict&quot;</code> 来明确地激活这些新的特性。</p><ol><li>“use strict” <ol><li>当它处于脚本文件的顶部时，则整个脚本文件都将以“现代”模式进行工作。</li><li>只有注释可以出现在 <code>&quot;use strict&quot;</code> 的上面。</li><li>没有类似于 <code>&quot;no use strict&quot;</code> 这样的指令可以使程序返回默认模式。一旦进入了严格模式，就没有回头路了。</li></ol></li><li>浏览器控制台 4. 打开控制台的时候，默认是不启动 <code>use strict</code> 的。 5. 在控制台启用use strict</li></ol><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;use strict&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// &lt;Shift+Enter 换行&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//  ...你的代码</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//&lt;按下 Enter 以运行&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//还有一直可靠但不优雅的写法</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &#39;use strict&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // ...你的代码...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})()</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><ol start="3"><li>我们应该使用 “use strict” 吗？ 现代 JavaScript 支持 “class” 和 “module” —— 高级语言结构，它们会自动启用 <code>use strict</code>。则无需添加 <code>&quot;use strict&quot;</code> 指令。</li></ol>`,4)]))}const k=a(t,[["render",l]]);export{u as __pageData,k as default};
