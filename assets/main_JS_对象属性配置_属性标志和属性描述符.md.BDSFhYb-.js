import{_ as s,c as r,o as l,ae as i}from"./chunks/framework.Dh1jimFm.js";const h=JSON.parse('{"title":"","description":"","frontmatter":{"date":"2025-04-25T00:00:00.000Z","tags":["js"]},"headers":[],"relativePath":"main/JS/对象属性配置/属性标志和属性描述符.md","filePath":"main/JS/对象属性配置/属性标志和属性描述符.md","lastUpdated":1746068392000}'),a={name:"main/JS/对象属性配置/属性标志和属性描述符.md"};function t(n,e,o,p,c,d){return l(),r("div",null,e[0]||(e[0]=[i(`<ol><li><strong>属性标志</strong><ol><li><strong><code>writable</code></strong> — 如果为 <code>true</code>，则值可以被修改，否则它是只可读的。</li><li><ul><li><strong><code>enumerable</code></strong> — 如果为 <code>true</code>，则会被在循环中列出，否则不会被列出。</li></ul></li><li><ul><li><strong><code>configurable</code></strong> — 如果为 <code>true</code>，则此属性可以被删除，这些特性也可以被修改，否则不可以。</li></ul></li></ol></li><li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/getOwnPropertyDescriptor" target="_blank" rel="noreferrer">Object.getOwnPropertyDescriptor</a> 方法允许查询有关属性的 <strong>完整</strong> 信息。 <ol><li>let descriptor = Object.getOwnPropertyDescriptor(obj, propertyName); <ol><li>obj：需要从中获取信息的对象。</li><li>propertyName：属性的名称。</li></ol></li></ol></li><li>修改标志，我们可以使用 <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/defineProperty" target="_blank" rel="noreferrer">Object.defineProperty</a>。 <ol><li>Object.defineProperty(obj, propertyName, descriptor) <ol><li><code>obj</code>，<code>propertyName</code>：要应用描述符的对象及其属性。</li><li>descriptor：要应用的属性描述符对象。</li></ol></li></ol></li><li><strong>只读</strong></li></ol><div class="language-JavaScript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">JavaScript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">	let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> user </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	  name: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;John&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	};</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	Object.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">defineProperty</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(user, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;name&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	  writable: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	});</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	user.name </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Pete&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Error: Cannot assign to read only property &#39;name&#39;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><pre><code>1. 只在严格模式下会出现 Errors
</code></pre><ol start="5"><li><strong>不可枚举</strong><ol><li>对象中内建的 <code>toString</code> 是不可枚举的，它不会显示在 <code>for..in</code> 中。</li></ol></li><li><strong>不可配置</strong><ol><li>不可配置标志（<code>configurable:false</code>）有时会预设在内建对象和属性中。</li><li><strong>请注意：<code>configurable: false</code> 防止更改和删除属性标志，但是允许更改对象的值。</strong></li></ol></li><li>唯一可行的特性更改：writable true → false</li><li><strong>Object.defineProperties</strong><ol><li>有一个方法 <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/defineProperties" target="_blank" rel="noreferrer">Object.defineProperties(obj, descriptors)</a>，允许一次定义多个属性。</li></ol></li><li><strong>Object.getOwnPropertyDescriptors</strong><ol><li>要一次获取所有属性描述符，我们可以使用 <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/getOwnPropertyDescriptors" target="_blank" rel="noreferrer">Object.getOwnPropertyDescriptors(obj)</a> 方法。</li></ol></li><li><strong>设定一个全局的密封对象</strong><ol><li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/preventExtensions" target="_blank" rel="noreferrer">Object.preventExtensions(obj)</a>：禁止向对象添加新属性。</li><li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/seal" target="_blank" rel="noreferrer">Object.seal(obj)</a>：禁止添加/删除属性。为所有现有的属性设置 <code>configurable: false</code>。</li><li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/freeze" target="_blank" rel="noreferrer">Object.freeze(obj)</a>：禁止添加/删除/更改属性。为所有现有的属性设置 <code>configurable: false, writable: false</code>。</li><li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/isExtensible" target="_blank" rel="noreferrer">Object.isExtensible(obj)</a>：如果添加属性被禁止，则返回 <code>false</code>，否则返回 <code>true</code>。</li><li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/isSealed" target="_blank" rel="noreferrer">Object.isSealed(obj)</a>：如果添加/删除属性被禁止，并且所有现有的属性都具有 <code>configurable: false</code>则返回 <code>true</code>。</li><li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/isFrozen" target="_blank" rel="noreferrer">Object.isFrozen(obj)</a>：如果添加/删除/更改属性被禁止，并且所有当前属性都是 <code>configurable: false, writable: false</code>，则返回 <code>true</code>。</li></ol></li></ol>`,4)]))}const g=s(a,[["render",t]]);export{h as __pageData,g as default};
