import{_ as o,c as d,o as l,ae as c}from"./chunks/framework.Dh1jimFm.js";const u=JSON.parse('{"title":"","description":"","frontmatter":{"date":"2025-04-21T00:00:00.000Z","tags":["js"]},"headers":[],"relativePath":"main/基础知识/空值合并运算符“？？”.md","filePath":"main/基础知识/空值合并运算符“？？”.md","lastUpdated":1746186059000}'),a={name:"main/基础知识/空值合并运算符“？？”.md"};function t(i,e,r,n,_,s){return l(),d("div",null,e[0]||(e[0]=[c('<p>空值合并运算符（nullish coalescing operator）的写法为两个问号 <code>??</code>。 <code>a ?? b</code> 的结果是：如果 <code>a</code> 是已定义的，则结果为a，如果 <code>a</code> 不是已定义的，则结果为 <code>b</code> 如果第一个参数不是 <code>null/undefined</code>，则 <code>??</code> 返回第一个参数。否则，返回第二个参数。</p><ol><li>一系列的值中选择出第一个非 <code>null/undefined</code> 的值。</li><li>与 || 比较 <ol><li><ul><li><code>||</code> 返回第一个 <strong>真</strong> 值。</li></ul></li><li><ul><li><code>??</code> 返回第一个 <strong>已定义的</strong> 值。</li></ul></li><li><code>||</code> 无法区分 <code>false</code>、<code>0</code>、空字符串 <code>&quot;&quot;</code> 和 <code>null/undefined</code>。它们都一样 —— 假值（falsy values）</li></ol></li><li>优先级 <ol><li><code>??</code> 运算符的优先级与 <code>||</code> 相同，它们的优先级都为 <code>3</code>，详见：<a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Operator_Precedence#Table" target="_blank" rel="noreferrer">MDN</a>。</li></ol></li><li>?? 与 &amp;&amp; 或 || 一起使用 <ol><li>JavaScript 禁止将 <code>??</code> 运算符与 <code>&amp;&amp;</code> 和 <code>||</code> 运算符一起使用，除非使用括号明确指定了优先级。</li><li></li></ol></li></ol>',2)]))}const m=o(a,[["render",t]]);export{u as __pageData,m as default};
