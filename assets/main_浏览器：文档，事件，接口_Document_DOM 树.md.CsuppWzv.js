import{_ as o,c as t,o as i,ae as e}from"./chunks/framework.Dh1jimFm.js";const u=JSON.parse('{"title":"","description":"","frontmatter":{"date":"2025-04-29T00:00:00.000Z","tags":["js"]},"headers":[],"relativePath":"main/浏览器：文档，事件，接口/Document/DOM 树.md","filePath":"main/浏览器：文档，事件，接口/Document/DOM 树.md","lastUpdated":1746186059000}'),n={name:"main/浏览器：文档，事件，接口/Document/DOM 树.md"};function s(r,l,d,c,a,g){return i(),t("div",null,l[0]||(l[0]=[e('<p><strong>HTML 文档的主干是标签（tag）。</strong> 根据文档对象模型（DOM），每个 HTML 标签都是一个对象。嵌套的标签是闭合标签的“子标签（children）”。标签内的文本也是一个对象。 所有这些对象都可以通过 JavaScript 来访问，我们可以使用它们来修改页面。</p><ol><li><strong>一些标签</strong><ol><li><code>document.body</code> 是表示 <code>&lt;body&gt;</code> 标签的对象。</li><li><ul><li><code>innerHTML</code> —— 节点的 HTML 内容。</li></ul></li><li><ul><li><code>offsetWidth</code> —— 节点宽度（以像素度量）</li></ul></li><li>等等</li></ol></li><li><strong>DOM的一些知识点</strong><ol><li>标签被称为 <strong>元素节点</strong>（或者仅仅是元素），并形成了树状结构：<code>&lt;html&gt;</code> 在根节点，<code>&lt;head&gt;</code> 和 <code>&lt;body&gt;</code> 是其子项，等。</li><li>元素内的文本形成 <strong>文本节点</strong>，被标记为 <code>＃text</code>。一个文本节点只包含一个字符串。它没有子项，并且总是树的叶子。</li><li>字符串开头/结尾处的空格，以及只有空格的文本节点，通常会被工具隐藏</li></ol></li><li><strong>自动修正</strong><ol><li>如果浏览器遇到格式不正确的 HTML，它会在形成 DOM 时自动更正它。</li><li>表格永远有 <code>&lt;tbody&gt;</code></li></ol></li><li><strong>其他节点类型</strong><ol><li>除了元素和文本节点外，还有一些其他的节点类型。，例如注释</li><li><strong>HTML 中的所有内容，甚至注释，都会成为 DOM 的一部分。</strong></li><li>甚至 HTML 开头的 <code>&lt;!DOCTYPE...&gt;</code> 指令也是一个 DOM 节点</li><li><code>document</code> —— DOM 的“入口点”。</li><li>元素节点 —— HTML 标签，树构建块。</li><li>本节点 —— 包含文本。</li><li>注释 —— 有时我们可以将一些信息放入其中，它不会显示，但 JS 可以从 DOM 中读取它。</li></ol></li><li><strong>查看DOM结构</strong><ol><li>可以打开这个网页 <a href="https://zh.javascript.info/article/dom-nodes/elks.html" target="_blank" rel="noreferrer">elks.html</a>，然后打开浏览器开发工具，并切换到元素（Elements）选项卡。</li><li><ul><li><strong>Styles</strong> —— 我们可以看到按规则应用于当前元素的 CSS 规则，包括内建规则（灰色）。几乎所有内容都可以就地编辑，包括下面的方框的 dimension/margin/padding。</li></ul></li><li><ul><li><strong>Computed</strong> —— 按属性查看应用于元素的 CSS：对于每个属性，我们可以都可以看到赋予它的规则（包括 CSS 继承等）。</li></ul></li><li><ul><li><strong>Event Listeners</strong> —— 查看附加到 DOM 元素的事件侦听器（我们将在本教程的下一部分介绍它们）。</li></ul></li></ol></li><li><strong>与控制台交互</strong><ol><li>在我们处理 DOM 时，我们可能还希望对其应用 JavaScript。例如：获取一个节点并运行一些代码来修改它，以查看结果。以下是在元素（Elements）选项卡和控制台（Console）之间切换的一些技巧。 <ol><li><ul><li>在元素（Elements）选项卡中选择第一个 <code>&lt;li&gt;</code>。</li></ul></li><li><ul><li>按下 Esc —— 它将在元素（Elements）选项卡下方打开控制台（Console）。</li></ul></li></ol></li></ol></li></ol>',2)]))}const _=o(n,[["render",s]]);export{u as __pageData,_ as default};
