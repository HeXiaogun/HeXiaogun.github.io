import{_ as l,c as t,o as r,ae as o}from"./chunks/framework.Dh1jimFm.js";const p=JSON.parse('{"title":"","description":"","frontmatter":{"date":"2025-04-24T00:00:00.000Z","tags":["js"]},"headers":[],"relativePath":"main/数据类型/Object.keys，values，entries.md","filePath":"main/数据类型/Object.keys，values，entries.md","lastUpdated":1746186059000}'),a={name:"main/数据类型/Object.keys，values，entries.md"};function s(c,e,i,n,b,d){return r(),t("div",null,e[0]||(e[0]=[o('<ol><li><strong>Object.keys，values，entries</strong><ol><li><ul><li><a href="https://developer.mozilla.org/zh/docs/Web/JavaScript/Reference/Global_Objects/Object/keys" target="_blank" rel="noreferrer">Object.keys(obj)</a> —— 返回一个包含该对象所有的键的数组。</li></ul></li><li><ul><li><a href="https://developer.mozilla.org/zh/docs/Web/JavaScript/Reference/Global_Objects/Object/values" target="_blank" rel="noreferrer">Object.values(obj)</a> —— 返回一个包含该对象所有的值的数组。</li></ul></li><li><ul><li><a href="https://developer.mozilla.org/zh/docs/Web/JavaScript/Reference/Global_Objects/Object/entries" target="_blank" rel="noreferrer">Object.entries(obj)</a> —— 返回一个包含该对象所有 [key, value] 键值对的数组。</li></ul></li></ol></li><li>Object.keys/values/entries 会忽略 symbol 属性 <ol><li>想要 Symbol 类型的键，那么这儿有一个单独的方法 <a href="https://developer.mozilla.org/zh/docs/Web/JavaScript/Reference/Global_Objects/Object/getOwnPropertySymbols" target="_blank" rel="noreferrer">Object.getOwnPropertySymbols</a>，它会返回一个只包含 Symbol 类型的键的数组。另外，还有一种方法 <a href="https://developer.mozilla.org/zh/docs/Web/JavaScript/Reference/Global_Objects/Reflect/ownKeys" target="_blank" rel="noreferrer">Reflect.ownKeys(obj)</a>，它会返回 <strong>所有</strong> 键。</li></ol></li><li><strong>转换对象</strong><ol><li>对象缺少数组存在的许多方法，例如 <code>map</code> 和 <code>filter</code> 等。</li><li>使用 <code>Object.entries(obj)</code> 从 <code>obj</code> 获取由键/值对组成的数组。</li><li>对该数组使用数组方法，例如 <code>map</code>，对这些键/值对进行转换。</li><li>对结果数组使用 <code>Object.fromEntries(array)</code> 方法，将结果转回成对象。</li></ol></li></ol>',1)]))}const j=l(a,[["render",s]]);export{p as __pageData,j as default};
